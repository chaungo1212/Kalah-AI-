Team 37: Product Backlog
Project Manager: Eric Munoz
Members: 
* Eric Munoz
* Chau Ngo
* Sarah White


GUI
* Welcome Screen
   * Contains sub menus
* Sub menus to store information about the game parameters
   * Number of seeds
   * Select if he/she will play as player 1 or 2
   * Select difficulty of the AI
   * Enters his/her own custom name via keyboard
* “Play Game” button
   * Game is loaded and starting game state screen displayed
* User if prompted if it their turn or the AI’s
   * A timer is displayed showing the current time left for the turn
* Get Input from mouse when user clicks on a box
   * Number of pieces in each box displays when moused over
   * Each piece is moved to correct location on the board
* Contains “New Game” and “Reset” widgets during game play
   * Calls the game manager to handle these
* Contains all images to use for the widgets


Player
* Checks to see if player has a turn available
* Stores the username of the player
* Stores the score of the player
* Stores the endzone that corresponds to the score


Game Manager
* Check to see if move is valid for each player
* Manage the time of each move
* After every move, check to see if game is over
* Inform who has won
* Send data to re-draw the game after a move has been made
* Handle new game and resets
   * Calls the board to get the game state


Board
* Return what house a seed is in
* Check if the last seed ends at the store
* Check if the last seed ends at an empty house
* Inform the manager that the player gets to play again
* Check if a house is empty
* Return the state of the board


Seed
* Check if seed is moveable
* Contains an image of the individual piece
   * Stores a value to determine the color or keep them all the same color
* Stores a value to determine what house it is in


AI
* Identifies all possible moves
* Can randomly select a valid move
* Can look ahead n number of moves
* Make min-max tree
* Beginner mode -- pick randomly from valid moves
   * is_valid(): if not empty and on correct side
* Easy mode -- comp looks ahead 1 move from min-max tree
* Med mode -- comp looks ahead half of tree?
   * Alpha-beta pruning implemented
* Hard mode -- comp looks ahead whole tree?
   * Alpha-beta pruning implemented across all levels
   * Iterative deepening implemented
